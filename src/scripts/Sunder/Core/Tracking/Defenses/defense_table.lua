snd.defenses = {
  -- Probably handled by firstaid anyways, otherwise auto assume people have plants/vials.
  def_waterbreathing = { defense = "waterbreathing", type = "normal", effect = "Prevents choking underwater", balance = { herb = "waterbreathing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_instawake      = { defense = "instawake", type = "normal", effect = "Removes the WAKE delay", balance = { herb = "stimulant" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_insomnia       = { defense = "insomnia", type = "normal", effect = "Prevents sleep effects", balance = { eat = "kawhepill" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_deathsight     = { defense = "deathsight", type = "normal", effect = "Reports player deaths", balance = { eat = "thanatonin" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_thirdeye       = { defense = "thirdeye", type = "normal", effect = "Adds locations to WHO", balance = { eat = "acuity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_antivenin      = { defense = "antivenin", type = "normal", effect = "Protects against poison damage", balance = { vial = "antivenin" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_levitation     = { defense = "levitation", type = "normal", effect = "Protects against falling effects", balance = { vial = "levitation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_temperance     = { defense = "temperance", type = "normal", effect = "Protects against fire damage", balance = { vial = "frost" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_speed          = { defense = "speed", type = "green", effect = "Protects against aeon affliction", balance = { vial = "speed" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_arcane         = { defense = "arcane", type = "normal", effect = "Protects against elemental damage", balance = { vial = "arcane" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  --def_caloric = {defense = "insulation", type = "normal", effect = "Protects against cold damage", balance = {salve = "caloric"}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic"},
  def_vigor          = { defense = "vigor", type = "normal", effect = "Critical hits heal you", balance = { vial = "vigor" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_fangbarrier    = { defense = "fangbarrier", type = "normal", effect = "Protects against syssin bites", balance = { special = "apply paste" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_rebounding     = { defense = "rebounding", type = "blue", effect = "Causes weapon attacks to backfire", balance = { smoke = "reishi" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_reflection     = { defense = "reflection", type = "blue", effect = "Takes your place for 1 attack", balance = { special = "cast reflection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Reflection" },
  def_courage        = { defense = "courage", type = "normal", effect = "Protects against transfixes n stuff", state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_bodyblock      = { defense = "bodyblock", type = "normal", effect = "Chance to reduce cutting/blunt damage by half", balance = { balanceequilibriumtake = "bdb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bodyblock" },
  def_evadeblock     = { defense = "evadeblock", type = "normal", effect = "Chance to dodge attacks", balance = { balanceequilibriumtake = "evb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Evadeblock" },
  def_armblock       = { defense = "armblock", type = "normal", effect = "Retaliatory arm hits", balance = { balanceequilibriumtake = "asb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Armblock" },
  def_legblock       = { defense = "legblock", type = "normal", effect = "Retaliatory leg hits", balance = { balanceequilibriumtake = "lsb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Legblock" },
  def_tripblock      = { defense = "tripblock", type = "normal", effect = "Chance to trip aggressors", balance = { balanceequilibriumtake = "trb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Tripblock" },
  def_pinchblock     = { defense = "pinchblock", type = "normal", effect = "Can knock low health opponents unconscious", balance = { balanceequilibriumtake = "pnb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Pinchblock" },


  --Generic skills or occurs in more than one
  def_treewatch = { defense = "treewatch", type = "normal", effect = "Watch out for climbers", balance = { special = "treewatch on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Treewatch" },
  def_skywatch = { defense = "skywatch", type = "normal", effect = "Watch out for fliers", balance = { special = "skywatch on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Skywatch" },

  def_nightsight = { defense = "nightsight", type = "normal", effect = "Allows glancing at night", balance = { special = "nightsight on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Nightsight" },
  def_fitness = { defense = "fitness", type = "normal", effect = "Protects from asthma", balance = { balanceequilibriumtake = "fitness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fitness" },
  def_clarity = { defense = "clarity", type = "normal", effect = "Protects against some mental affs", balance = { needyequilibriumtake = "clarity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Clarity", tree = "Survival" },
  def_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "shroud" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_manipulation_dome = { defense = "manipulation_dome", type = "normal", effect = "cheap prism", balance = { needyequilibriumtake = "manipulate pylon for dome" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_gripping = { defense = "gripping", type = "normal", effect = "Prevents disarming", balance = { balanceequilibriumtake = "grip" }, state = "down", needit = false, timer = createStopWatch(), skill = "Gripping" },
  def_starburst = { defense = "starburst", type = "blue", effect = "Instant revival on death", balance = { tattoo = "starburst" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_density = { defense = "density", type = "red", effect = "Resists forced movement", balance = { salve = "mass" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_waterwalking = { defense = "waterwalking", type = "normal", effect = "Allows you to walk on water", balance = { special = "touch waterwalking" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_overwatch = { defense = "overwatch", type = "normal", effect = "See items in the air/trees", balance = { special = "goggle toggle overwatch" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_divine_speed = { defense = "divine_speed", type = "normal", effect = "Faster movement through Divine Grace", balance = { balanceequilibriumtake = "grace" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_hypersight = { defense = "hypersight", type = "normal", effect = "see through shenanigans", balance = { needyequilibriumtake = "hypersight on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_lifevision = { defense = "lifevision", type = "normal", effect = "See all things living, sometimes identify illusions.", balance = { balanceequilibriumtake = "lifevision" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lifevision" },
  def_selfishness = { defense = "selfishness", type = "MediumSpringGreen", effect = "Too selfish to put valuables at risk.", balance = { balanceequilibriumtake = "selfishness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_returning = { defense = "returning", type = "normal", effect = "Return thrown weapons to your hands", balance = { balanceequilibriumtake = "returning on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Returning" },
  def_irongrip = { defense = "irongrip", type = "normal", effect = "Prevents disarming", balance = { balanceequilibriumtake = "irongrip" }, state = "down", needit = false, timer = createStopWatch(), skill = "Irongrip" },
  def_manipulation_wealth = { defense = "manipulation_wealth", type = "cyan", effect = "More gold drops", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_manipulation_wisdom = { defense = "manipulation_wisdom", type = "cyan", effect = "More xp!", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },


  --Ylem
  def_mist_yellow                = { defense = "mist_yellow", type = "ansi_light_yellow", effect = "5% increase in experience", balance = { special = "activate amber orb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_mist_green                 = { defense = "mist_green", type = "lawn_green", effect = "25% increase in vigour healing", balance = { special = "activate green orb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_mist_red                   = { defense = "mist_red", type = "firebrick", effect = "more damage to and less from denizens", balance = { special = "activate crimson orb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_mist_blue                  = { defense = "mist_blue", type = "ansiLightBlue", effect = "protection from damage", balance = { special = "activate cerulean orb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_mist_white                 = { defense = "mist_white", type = "ghost_white", effect = "increased ylem gain from eld", balance = { special = "activate white orb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --Generic endgame
  def_safeguard                  = { defense = "safeguard", type = "normal", effect = "Increased resistances", balance = { balanceequilibrium = "safeguard" }, state = "down", needit = false, timer = createStopWatch(), skill = "Instill" },
  def_warmth                     = { defense = "warmth", type = "normal", effect = "Increased resistances", balance = { balanceequilibrium = "warmth" }, state = "down", needit = false, timer = createStopWatch(), skill = "Instill" },
  def_miasma                     = { defense = "miasma", type = "normal", effect = "Increased resistances", balance = { balanceequilibrium = "miasma" }, state = "down", needit = false, timer = createStopWatch(), skill = "Instill" },

  --Raceskills or tattoos
  def_pacing                     = { defense = "pacing", type = "red", effect = "Keep up while following", balance = { needybalancetake = "pacing on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Pacing" },
  def_heatsight                  = { defense = "heatsight", type = "normal", effect = "See hidden people", balance = { needybalancetake = "heatsight" }, state = "down", needit = false, timer = createStopWatch(), skill = "Heatsight" },
  def_chameleon                  = { defense = "chameleon", type = "normal", effect = "Change your name on QW/WHO", balance = { balanceequilibrium = "touch chameleon " }, state = "down", needit = false, timer = createStopWatch(), skill = "ChameleonTattoo" },
  def_cloak                      = { defense = "cloak", type = "blue", effect = "Protects from unwanted summons", balance = { tattoo = "cloak" }, state = "down", needit = false, timer = createStopWatch(), skill = "CloakTattoo" },
  def_mindseye                   = { defense = "mindseye", type = "green", effect = "Allows deaf/blind hearing/vision", balance = { needybalancetake = "mindseye" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_firefly                    = { defense = "firefly", type = "green", effect = "Protects you against them Sciomancers", balance = { tattoo = "firefly" }, state = "down", needit = false, timer = createStopWatch(), skill = "FireflyTattoo" },
  def_flame                      = { defense = "flame", type = "green", effect = "Helps protect against writhe affs", balance = { tattoo = "flame" }, state = "down", needit = false, timer = createStopWatch(), skill = "FlameTattoo" },
  def_shielded                   = { defense = "shielded", type = "green", effect = "Magical shield to stop attacks", balance = { tattoo = "shield" }, state = "down", needit = false, timer = createStopWatch(), skill = "ShieldTattoo" },
  --balance = {needyequilibriumtake = "heatsight"}

  --Akkari
  def_ardour_strength            = { defense = "ardour_strength", type = "ivory", effect = "+1 STR", balance = { balanceequilibriumtake = "ardour strength" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ardour" },
  def_ardour_constitution        = { defense = "ardour_constitution", type = "ivory", effect = "+1 CON", balance = { balanceequilibriumtake = "ardour constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ardour" },
  def_ardour_intelligence        = { defense = "ardour_intelligence", type = "ivory", effect = "+1 INT", balance = { balanceequilibriumtake = "ardour intelligence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ardour" },
  def_ardour_dexterity           = { defense = "ardour_dexterity", type = "ivory", effect = "+1 DEX", balance = { balanceequilibriumtake = "ardour dexterity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ardour" },
  def_relentless                 = { defense = "relentless", type = "ivory", effect = "Fortify your body to take less physical damage", balance = { balanceequilibriumtake = "relentless" }, state = "down", needit = false, timer = createStopWatch(), skill = "Relentless" },
  def_resolved                   = { defense = "resolved", type = "ivory", effect = "Resolve yourself to take less magical damage", balance = { balanceequilibriumtake = "resolve" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resolve" },
  --redundant with prae celerity
  --def_celerity = {defense = "celerity", type = "normal", effect = "Increased movement speed", balance = {balanceequilibriumtake = "celerity"}, state = "down", needit = false, timer = createStopWatch(), skill = "Celerity" },
  def_acuity                     = { defense = "acuity", type = "ivory", effect = "Detect nearby movements", balance = { balanceequilibriumtake = "acuity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Acuity" },
  def_transience                 = { defense = "transience", type = "ivory", effect = "You avoid opponents' blows", balance = { balanceequilibriumtake = "transience" }, state = "down", needit = false, timer = createStopWatch(), skill = "Transience" },
  def_entrench                   = { defense = "entrench", type = "ivory", effect = "You are linked to your coffin", balance = { balanceequilibriumtake = "entrench" }, state = "down", needit = false, timer = createStopWatch(), skill = "Entrench" },
  def_ascetic                    = { defense = "ascetic", type = "ivory", effect = "Make your spirit use more efficient", balance = { balanceequilibriumtake = "spirit ascetic" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ascetic" },
  def_retaliation                = { defense = "retaliation", type = "ivory", effect = "The Light strikes out at your attacker", balance = { balanceequilibriumtake = "spirit retaliation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Retaliation" },
  def_suppressed                 = { defense = "suppressed", type = "ivory", effect = "Others cannot see your vitals", balance = { balanceequilibriumtake = "spirit suppress" }, state = "down", needit = false, timer = createStopWatch(), skill = "Suppress" },
  def_holylight                  = { defense = "holylight", type = "ivory", effect = "Strike fear into enemies with the Light", balance = { balanceequilibriumtake = "spirit light" }, state = "down", needit = false, timer = createStopWatch(), skill = "Light" },
  def_spiritbolster              = { defense = "spiritbolster", type = "ivory", effect = "Reduce damage to your squire by half", balance = { balanceequilibriumtake = "spirit bolster" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bolster" },
  def_unbroken                   = { defense = "unbroken", type = "ivory", effect = "Damage will not break you.", balance = { balanceequilibriumtake = "spirit unbroken" }, state = "down", needit = false, timer = createStopWatch(), skill = "Unbroken" },
  def_transcendence              = { defense = "transcendence", type = "ivory", effect = "Transcend mortal limitations", balance = { balanceequilibriumtake = "spirit transcend" }, state = "down", needit = false, timer = createStopWatch(), skill = "Transcend" },

  --Alchemist
  def_interposition              = { defense = "interposition", type = "normal", effect = "Share damage with your experiment.", balance = { balanceequilibriumtake = "experiment interposition on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Interposition" },
  def_obfuscation                = { defense = "obfuscation", type = "normal", effect = "Resistance to cutting/blunt.", balance = { balanceequilibriumtake = "derive obfuscation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Obfuscation" },
  def_cognisance                 = { defense = "cognisance", type = "normal", effect = "You get loki 2.0.", balance = { balanceequilibriumtake = "derive cognisance on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cognisance" },
  def_resuscitation              = { defense = "resuscitation", type = "normal", effect = "Restore HP upon getting low health.", balance = { balanceequilibriumtake = "alchemy resuscitation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resuscitation" },
  def_conduit_crutch             = { defense = "conduit_crutch", type = "normal", effect = "Give mental affs when your parry is hit.", balance = { balanceequilibriumtake = "derive crutch" }, state = "down", needit = false, timer = createStopWatch(), skill = "Crutch" },
  def_blightbringer              = { defense = "blightbringer", type = "normal", effect = "Bring your nature with you", balance = { balanceequilibriumtake = "botany blightbringer on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blightbringer" },
  def_discipline_fieldstudies    = { defense = "discipline_fieldstudies", type = "normal", effect = "Heals you in forests", balance = { balanceequilibriumtake = "discipline field studies recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_research        = { defense = "discipline_research", type = "normal", effect = "Heals mental afflictions", balance = { balanceequilibriumtake = "discipline research recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_biology         = { defense = "discipline_biology", type = "normal", effect = "Heals afflictions", balance = { balanceequilibriumtake = "discipline biology recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_compounding     = { defense = "discipline_compounding", type = "normal", effect = "Chance to save catalysts", balance = { balanceequilibriumtake = "discipline compounding recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_pnp             = { defense = "discipline_pnp", type = "normal", effect = "Immune to forced actions", balance = { balanceequilibriumtake = "discipline procedure & protocol recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_chemistry       = { defense = "discipline_chemistry", type = "normal", effect = "Negate elemental attack on a cooldown", balance = { balanceequilibriumtake = "discipline chemistry recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },
  def_discipline_experimentation = { defense = "discipline_experimentation", type = "normal", effect = "Experiment strikes faster", balance = { balanceequilibriumtake = "discipline experimentation recall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disciplines" },


  --Archivist
  def_spheres = { defense = "spheres", type = "normal", effect = "Spheres defense for Archivist", balance = { needyequilibriumtake = "contemplate spheres" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spheres" },
  def_linked = { defense = "linked", type = "normal", effect = "Yay link", balance = { balanceequilibriumtake = "elicit link 50" }, state = "down", needit = false, timer = createStopWatch(), skill = "Link" },
  def_oneness = { defense = "oneness", type = "normal", effect = "oneness", balance = { balanceequilibriumtake = "elicit oneness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oneness" },
  def_sublimation = { defense = "sublimation", type = "normal", effect = "sublimation", balance = { balanceequilibrium = "elicit sublimation me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sublimation" },
  def_ameliorate = { defense = "ameliorate", type = "normal", effect = "ameliorate", balance = { balanceequilibriumtake = "bio ameliorate on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ameliorate" },
  def_catabolism = { defense = "catabolism", type = "normal", effect = "catabolism", balance = { balanceequilibriumtake = "bio catabolism" }, state = "down", needit = false, timer = createStopWatch(), skill = "Catabolism" },
  def_geo_invert = { defense = "Token Inverted", type = "normal", effect = "You Have Inverted Your Token", balance = { balanceequilibriumtake = "drop token##geo invert" }, state = "down", needit = false, timer = createStopWatch(), skill = "Invert" },
  def_geo_trace = { defense = "Token Tracing You", type = "normal", effect = "You Have Traced Your Token", balance = { balanceequilibriumtake = "geo trace me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Trace" },
  def_empower_jhako = { defense = "Empowering Jhako", type = "normal", effect = "You Have Empowered Jhako", balance = { balanceequilibriumtake = "empower jhako" }, state = "down", needit = false, timer = createStopWatch(), skill = "Empower" },
  def_nexus = { defense = "nexus", type = "normal", effect = "Setup your nexus", balance = { balanceequilibriumtake = "bio nexus one" }, state = "down", needit = false, timer = createStopWatch(), skill = "Nexus" },
  def_ethereal = { defense = "ethereal", type = "normal", effect = "Hard to hit", balance = { balanceequilibriumtake = "bio ethereal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ethereal" },


  --Ascendril
  def_missiles = { defense = "missiles", type = "normal", effect = "PvE damage", balance = { balanceequilibriumtake = "cast missiles on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Missiles" },
  --def_sagacity = {defense = "sagacity", type = "normal", effect = "extra mana recovery", balance = {balanceequilibriumtake = "cast sagacity"}, state = "down", needit = false, timer = createStopWatch(), skill = "Sagacity" },
  def_arcaneskin = { defense = "arcaneskin", type = "normal", effect = "Increased cutting/blunt resistances", balance = { balanceequilibrium = "cast arcaneskin" }, state = "down", needit = false, timer = createStopWatch(), skill = "Arcaneskin" },
  def_countercurrent = { defense = "countercurrent", type = "normal", effect = "chance to resist venoms", balance = { balanceequilibrium = "cast countercurrent" }, state = "down", needit = false, timer = createStopWatch(), skill = "Countercurrent" },
  def_afterburn = { defense = "afterburn", type = "normal", effect = "faster fire spells", balance = { balanceequilibriumtake = "cast afterburn" }, state = "down", needit = false, timer = createStopWatch(), skill = "Afterburn" },
  def_capacitance = { defense = "capacitance", type = "normal", effect = "one time electric dodge", balance = { balanceequilibriumtake = "cast capacitance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Capacitance" },
  def_fireburst = { defense = "fireburst", type = "normal", effect = "throw fireballs", balance = { balanceequilibriumtake = "cast fireburst" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fireburst" },



  --Bard
  def_sheath = { defense = "sheath", type = "normal", effect = "10% Resist to Cutting/Blunt", balance = { needyequilibriumtake = "weave sheath" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sheath" },
  def_charisma = { defense = "charisma", type = "normal", effect = "Adventuring opportunities are more fruitful", balance = { balanceequilibrium = "charisma" }, state = "down", needit = false, timer = createStopWatch(), skill = "Charisma" },
  def_euphonia = { defense = "euphonia", type = "normal", effect = "HP and MP heal for you and allies when you sing/play", balance = { needyequilibriumtake = "euphonia" }, state = "down", needit = false, timer = createStopWatch(), skill = "Euphonia" },
  def_discordance = { defense = "discordance", type = "normal", effect = "Affs on enemies when you sing/play", balance = { needyequilibriumtake = "discordance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Discordance" },
  def_halfbeat = { defense = "halfbeat", type = "normal", effect = "Speed up music occasionally", balance = { needyequilibriumtake = "halfbeat" }, state = "down", needit = false, timer = createStopWatch(), skill = "Halfbeat" },
  def_aurora = { defense = "aurora", type = "normal", effect = "Damage bonus against hostiles", balance = { needyequilibriumtake = "weave aurora" }, state = "down", needit = false, timer = createStopWatch(), skill = "Aurora" },
  def_equipoise = { defense = "equipoise", type = "normal", effect = "Follow when off eq", balance = { needybalancetake = "equipoise on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Equipoise" },
  def_stretching = { defense = "stretching", type = "normal", effect = "Heal limb damage on mending cure", balance = { needybalancetake = "stretching on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stretching" },
  def_song_destiny = { defense = "song_destiny", type = "normal", effect = "Certain Weaving spells cost no eq on next cast", balance = { special = "sing song of destiny" }, state = "down", needit = false, timer = createStopWatch(), skill = "Destiny" },

  --Bloodborn
  def_victimise = { defense = "victimise", type = "normal", effect = "PvE damage", balance = { balanceequilibriumtake = "unleash victimise on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Victimise" },
  def_panoply = { defense = "panoply", type = "normal", effect = "Increased cutting/blunt resistances", balance = { balanceequilibrium = "unleash panoply" }, state = "down", needit = false, timer = createStopWatch(), skill = "Panoply" },
  def_forestall = { defense = "forestall", type = "normal", effect = "chance to resist venoms", balance = { balanceequilibrium = "unleash forestall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Forestall" },
  def_roil = { defense = "roil", type = "normal", effect = "faster fire spells", balance = { balanceequilibriumtake = "humour roil" }, state = "down", needit = false, timer = createStopWatch(), skill = "Roil" },
  def_impediment = { defense = "impediment", type = "normal", effect = "Disrupt after 5 spells", balance = { balanceequilibriumtake = "humour impediment" }, state = "down", needit = false, timer = createStopWatch(), skill = "Impediment" },
  def_blackfire = { defense = "blackfire", type = "normal", effect = "throw fireballs", balance = { balanceequilibriumtake = "humour retch" }, state = "down", needit = false, timer = createStopWatch(), skill = "Retch" },



  --Carnifex
  def_fearless = { defense = "fearless", type = "normal", effect = "Protects against fear affliction.", balance = { special = "fearless" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fearless" },
  def_reveling = { defense = "reveling", type = "normal", effect = "Periodic heal on damage done.", balance = { needybalancetake = "reveling on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Reveling" },
  def_reckless = { defense = "reckless", type = "normal", effect = "Can attack with 1 broken arm.", balance = { needybalancetake = "recklessness on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Reckless" },
  def_soulharvest = { defense = "soulharvest", type = "normal", effect = "Automatically harvest souls.", balance = { special = "soul harvest on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Harvest" },
  def_soul_fracture = { defense = "soul_fracture", type = "normal", effect = "Boosts defenses and weapon damage.", balance = { special = "soul fracture" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fracture" },
  def_soul_body = { defense = "soul_body", type = "normal", effect = "Boosts physical defense.", balance = { needyequilibriumtake = "soul embed in body" }, state = "down", needit = false, timer = createStopWatch(), skill = "EmbedBody" },
  def_soul_fortify = { defense = "soul_fortify", type = "normal", effect = "Increased constitution.", balance = { needyequilibriumtake = "soul fortify" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fortify" },
  def_soulthirst = { defense = "soulthirst", type = "normal", effect = "Steals soul on hit.", balance = { equilibriumtake = "soul thirst" }, state = "down", needit = false, timer = createStopWatch(), skill = "Soulthirst" },
  def_soul_substitute = { defense = "substitute", type = "normal", effect = "Protected from death.", balance = { needyequilibriumtake = "soul substitute" }, state = "down", needit = false, timer = createStopWatch(), skill = "Substitute" },
  def_soul_spiritsight = { defense = "soul_spiritsight", type = "normal", effect = "You can see the hidden.", balance = { needyequilibriumtake = "soul spiritsight" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spiritsight" },
  def_hound_opening = { defense = "hound_opening", type = "normal", effect = "Increases damage done to mobs.", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Openings" },
  def_bruteforce = { defense = "bruteforce", type = "normal", effect = "Attacks hit through parry.", balance = { needybalancetake = "hammer force" }, state = "down", needit = false, timer = createStopWatch(), skill = "BruteForce" },
  def_herculeanrage = { defense = "herculean rage", type = "normal", effect = "Make them prone/off bal.", balance = { needybalancetake = "hammer rage on" }, state = "down", needit = false, timer = createStopWatch(), skill = "HerculeanRage" },
  def_houndmark = { defense = "houndmark", type = "yellow", effect = "hounds go zoom", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_cruelty = { defense = "cruelty", type = "normal", effect = "Increased strength.", balance = { needyequilibriumtake = "cruelty" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cruelty" },
  def_charging = { defense = "charging", type = "normal", effect = "Chase fleeing targetS", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Charging" },

  --Earthcaller
  def_heatshield = { defense = "heatshield", type = "normal", effect = "Light-based damage resistance", balance = { needyequilibriumtake = "tectonic heatshield" }, state = "down", needit = false, timer = createStopWatch(), skill = "Heatshield" },
  def_smothering = { defense = "smothering", type = "normal", effect = "Resists fire attacks", balance = { needybalancetake = "tectonic smothering" }, state = "down", needit = false, timer = createStopWatch(), skill = "Smothering" },
  def_seismicity = { defense = "seismicity", type = "normal", effect = "Dealing AoE room damage to enemies", balance = { needybalancetake = "tectonic seismicity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shine" },
  def_battlehymn = { defense = "battlehymn", type = "normal", effect = "Increases strength", balance = { needyequilibriumtake = "dirge battlehymn" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battlehymn" },
  -- def_battlehymn_strength = {defense = "battlehymn_strength", type = "normal", effect = "Increases strength", balance = {needyequilibriumtake = "dirge battlehymn strength"}, state = "down", needit = false, timer = createStopWatch(), skill = "Battlehymn" },
  -- def_battlehymn_constitution = {defense = "battlehymn_constitution", type = "normal", effect = "Increases constitution", balance = {needyequilibriumtake = "dirge battlehymn constitution"}, state = "down", needit = false, timer = createStopWatch(), skill = "Battlehymn" },
  -- def_battlehymn_intelligence = {defense = "battlehymn_intelligence", type = "normal", effect = "Increases intelligence", balance = {needyequilibriumtake = "dirge battlehymn intelligence"}, state = "down", needit = false, timer = createStopWatch(), skill = "Battlehymn" },
  -- def_battlehymn_dexterity = {defense = "battlehymn_dexterity", type = "normal", effect = "Increases dexterity", balance = {needyequilibriumtake = "dirge battlehymn dexterity"}, state = "down", needit = false, timer = createStopWatch(), skill = "Battlehymn" },
  def_unbending = { defense = "unbending", type = "normal", effect = "no clumsy on shield attacks", balance = { balanceequilibrium = "tectonic unbending" }, state = "down", needit = false, timer = createStopWatch(), skill = "Unbending" },
  def_insulation = { defense = "insulation", type = "normal", effect = "Prevents frozen buildup", balance = { needybalancetake = "tectonic insulation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Insulation" },

  --Executor
  def_girded = { defense = "girded", type = "normal", effect = "10% Resist to Cutting/Blunt", balance = { needyequilibriumtake = "gird" }, state = "down", needit = false, timer = createStopWatch(), skill = "Gird" },
  def_bloodlust = { defense = "bloodlust", type = "normal", effect = "Gain health on melee attack", balance = { needyequilibriumtake = "bloodlust" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bloodlust" },
  def_stoicism = { defense = "stoicism", type = "normal", effect = "15% Resist to Cold/Venom", balance = { needyequilibriumtake = "stoicism" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stoicism" },
  def_limberness = { defense = "limberness", type = "normal", effect = "Increased writhe", balance = { balanceequilibriumtake = "limberness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Limberness" },
  def_deception = { defense = "deception", type = "normal", effect = "Not listed on scent", balance = { balanceequilibriumtake = "deceive senses" }, state = "down", needit = false, timer = createStopWatch(), skill = "Deception" },
  def_bounding = { defense = "bounding", type = "normal", effect = "You move faster outdoors & in forests", balance = { balanceequilibriumtake = "bounding" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bounding" },
  def_efficiency = { defense = "efficiency", type = "normal", effect = "You shoot and trap faster", balance = { balanceequilibriumtake = "efficiency" }, state = "down", needit = false, timer = createStopWatch(), skill = "Efficiency" },
  def_somersault = { defense = "somersault", type = "normal", effect = "Prepared to yeet out", balance = { balanceequilibriumtake = "somersault" }, state = "down", needit = false, timer = createStopWatch(), skill = "Somersault" },
  def_inspirited = { defense = "inspirited", type = "normal", effect = "Harder, Better, Faster, Stronger", balance = { balanceequilibriumtake = "inspirit" }, state = "down", needit = false, timer = createStopWatch(), skill = "Inspirit" },
  def_coagulation = { defense = "coagulation", type = "normal", effect = "Passively clot", balance = { balanceequilibriumtake = "coagulation on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Coagulation" },
  def_lithe = { defense = "lithe", type = "normal", effect = "50% chance to avoid being knocked over", balance = { balanceequilibriumtake = "lithe on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lithe" },


  --Indorani
  def_soulmask             = { defense = "soulmask", type = "normal", effect = "Your soul is harder to sense.", balance = { special = "soulmask" }, state = "down", needit = false, timer = createStopWatch(), skill = "Soulmask" },
  def_vengeance            = { defense = "vengeance", type = "normal", effect = "You will deal AoE damage to enemies upon death.", balance = { balanceequilibriumtake = "vengeance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vengeance" },
  def_deathaura            = { defense = "deathaura", type = "normal", effect = "You deal damage to enemies in room passively.", balance = { balanceequilibriumtake = "deathaura on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Deathaura" },
  def_gravechill           = { defense = "gravechill", type = "normal", effect = "Cold damage on decay instead of magic.", balance = { balanceequilibriumtake = "gravechill" }, state = "down", needit = false, timer = createStopWatch(), skill = "Gravechill" },
  def_soulcage             = { defense = "soulcage", type = "normal", effect = "You come back to life upon death instantly.", balance = { balanceequilibriumtake = "soulcage" }, state = "down", needit = false, timer = createStopWatch(), skill = "Soulcage" },
  def_devilpact            = { defense = "devilpact", type = "normal", effect = "Throw 2 cards at once.", balance = { balanceequilibriumtake = "fling devil at ground" }, state = "down", needit = false, timer = createStopWatch(), skill = "Devil" },
  def_eclipse              = { defense = "eclipse", type = "normal", effect = "Every 3rd card is hidden, sun/moon only.", balance = { balanceequilibriumtake = "fling eclipse at me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Eclipse" },
  def_chariot              = { defense = "chariot", type = "normal", effect = "+Celerity, +bal for cards", balance = { balanceequilibriumtake = "fling chariot at ground" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chariot" },
  def_hierophant           = { defense = "hierophant", type = "normal", effect = "Protect against disloyalty.", balance = { balanceequilibriumtake = "fling hierophant at me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Hierophant" },
  def_soulcage             = { defense = "soulcage", type = "normal", effect = "You come back to life upon death instantly.", balance = { balanceequilibriumtake = "soulcage" }, state = "down", needit = false, timer = createStopWatch(), skill = "Soulcage" },
  def_putrefaction         = { defense = "putrefaction", type = "normal", effect = "Cutting/blunt resist.", balance = { balanceequilibriumtake = "putrefaction" }, state = "down", needit = false, timer = createStopWatch(), skill = "Putrefaction" },
  def_morisensus           = { defense = "morisensus", type = "normal", effect = "Sense people close to death", balance = { balanceequilibriumtake = "morisensus" }, state = "down", needit = false, timer = createStopWatch(), skill = "Morisensus" },

  --Luminary
  def_lightshield          = { defense = "lightshield", type = "normal", effect = "Light-based damage resistance", balance = { needyequilibriumtake = "evoke lightshield" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lightshield" },
  def_fireblock            = { defense = "fireblock", type = "normal", effect = "Resists fire attacks", balance = { needybalancetake = "evoke fireblock" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fireblock" },
  def_shine                = { defense = "shine", type = "normal", effect = "Dealing AoE room damage to enemies", balance = { needybalancetake = "evoke shine" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shine" },
  def_inspiration          = { defense = "inspiration", type = "normal", effect = "Increases strength", balance = { needyequilibriumtake = "perform inspiration" }, state = "down", needit = false, timer = createStopWatch(), skill = "Inspiration" },
  def_boilingblood         = { defense = "boilingblood", type = "normal", effect = "no clumsy on shield attacks", balance = { balanceequilibrium = "evoke boilingblood" }, state = "down", needit = false, timer = createStopWatch(), skill = "Boilingblood" },

  -- def_inspiration_strength = {defense = "inspiration_strength", type = "normal", effect = "Increases strength", balance = {needyequilibriumtake = "perform inspiration strength"}, state = "down", needit = false, timer = createStopWatch(), skill = "Inspiration" },
  -- def_inspiration_dexterity = {defense = "inspiration_dexterity", type = "normal", effect = "Increases dexterity", balance = {needyequilibriumtake = "perform inspiration dexterity"}, state = "down", needit = false, timer = createStopWatch(), skill = "Inspiration" },
  -- def_inspiration_intelligence = {defense = "inspiration_intelligence", type = "normal", effect = "Increases intelligence", balance = {needyequilibriumtake = "perform inspiration intelligence"}, state = "down", needit = false, timer = createStopWatch(), skill = "Inspiration" },
  -- def_inspiration_constitution = {defense = "inspiration_constitution", type = "normal", effect = "Increases constitution", balance = {needyequilibriumtake = "perform inspiration constitution"}, state = "down", needit = false, timer = createStopWatch(), skill = "Inspiration" },

  --Monk
  def_vitality             = { defense = "vitality", type = "normal", effect = "You will get a burst of HP when near death", balance = { needyequilibriumtake = "vitality" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vitality" },
  def_regeneration         = { defense = "regeneration", type = "normal", effect = "HP regen", balance = { special = "regeneration on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Regeneration" },
  def_consciousness        = { defense = "consciousness", type = "normal", effect = "Raises WILL by 2 and increases willpower regen", balance = { balanceequilibriumtake = "consciousness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Consciousness" },

  def_constitution         = { defense = "constitution", type = "normal", effect = "Protection from nausea", balance = { needyequilibriumtake = "constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Constitution" },
  def_split_mind           = { defense = "split_mind", type = "normal", effect = "Constant meditation", balance = { needyequilibriumtake = "split mind" }, state = "down", needit = false, timer = createStopWatch(), skill = "Splitting" },
  def_kaido_immunity       = { defense = "kaido_immunity", type = "normal", effect = "You will auto cure the next poison you are hit with", balance = { needyequilibriumtake = "immunity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Immunity" },
  def_boosted_regen        = { defense = "boosted_regen", type = "normal", effect = "Even more HP regen", balance = { special = "boost regeneration" }, state = "down", needit = false, timer = createStopWatch(), skill = "Boosting" },
  def_insight              = { defense = "insight", type = "normal", effect = "See the thoughts of others", balance = { needyequilibriumtake = "mind insight on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Insight" },
  def_toughness            = { defense = "toughness", type = "normal", effect = "Cutting resistance", balance = { needyequilibriumtake = "toughness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Toughness" },
  def_resistance           = { defense = "resistance", type = "normal", effect = "Magic resistance", balance = { needyequilibriumtake = "resistance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resistance" },

  --Oneiromancer
  def_redoubt              = { defense = "redoubt", type = "normal", effect = "Your soul is harder to sense.", balance = { special = "redoubt" }, state = "down", needit = false, timer = createStopWatch(), skill = "Redoubt" },
  def_defiance             = { defense = "defiance", type = "normal", effect = "You will deal AoE damage to enemies upon death.", balance = { balanceequilibriumtake = "defiance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Defiance" },
  def_intoxication         = { defense = "intoxication", type = "normal", effect = "You deal damage to enemies in room passively.", balance = { balanceequilibriumtake = "intoxication" }, state = "down", needit = false, timer = createStopWatch(), skill = "Intoxication" },
  def_glaciation           = { defense = "glaciation", type = "normal", effect = "Cold damage on decay instead of magic.", balance = { balanceequilibriumtake = "glaciation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Glaciation" },
  def_remembrance          = { defense = "remembrance", type = "normal", effect = "You come back to life upon death instantly.", balance = { balanceequilibriumtake = "remembrance" }, state = "down", needit = false, timer = createStopWatch(), skill = "remembrance" },
  def_faerie               = { defense = "faerie", type = "normal", effect = "Throw 2 cards at once.", balance = { balanceequilibriumtake = "unfurl faerie at ground" }, state = "down", needit = false, timer = createStopWatch(), skill = "Faerie" },
  def_cloud                = { defense = "cloud", type = "normal", effect = "Every 3rd card is hidden, sun/moon only.", balance = { balanceequilibriumtake = "unfurl cloud at me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cloud", tree = "Hyalincuru" },
  def_crane                = { defense = "crane", type = "normal", effect = "+Celerity, +bal for cards", balance = { balanceequilibriumtake = "unfurl crane at ground" }, state = "down", needit = false, timer = createStopWatch(), skill = "Crane" },
  def_fan                  = { defense = "fan", type = "normal", effect = "Protect against disloyalty.", balance = { balanceequilibriumtake = "unfurl fan at me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fan" },
  def_diminution           = { defense = "diminution", type = "normal", effect = "Cutting/blunt resist.", balance = { balanceequilibriumtake = "diminution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Diminution" },
  def_tapestry             = { defense = "tapestry", type = "normal", effect = "Sense people close to death", balance = { balanceequilibriumtake = "tapestry" }, state = "down", needit = false, timer = createStopWatch(), skill = "Tapestry" },

  --Praenomen
  def_potence_strength     = { defense = "potence_strength", type = "normal", effect = "+1 STR", balance = { balanceequilibriumtake = "potence strength" }, state = "down", needit = false, timer = createStopWatch(), skill = "Potence" },
  def_potence_constitution = { defense = "potence_constitution", type = "normal", effect = "+1 CON", balance = { balanceequilibriumtake = "potence constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Potence" },
  def_potence_intelligence = { defense = "potence_intelligence", type = "normal", effect = "+1 INT", balance = { balanceequilibriumtake = "potence intelligence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Potence" },
  def_potence_dexterity    = { defense = "potence_dexterity", type = "normal", effect = "+1 DEX", balance = { balanceequilibriumtake = "potence dexterity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Potence" },
  def_fortify              = { defense = "fortify", type = "normal", effect = "Fortify your body to take less physical damage", balance = { balanceequilibriumtake = "fortify" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fortify" },
  def_corpus_warding       = { defense = "corpus_warding", type = "normal", effect = "Fortify your body to take less magical damage", balance = { balanceequilibriumtake = "ward" }, state = "down", needit = false, timer = createStopWatch(), skill = "Warding" },
  def_celerity             = { defense = "celerity", type = "normal", effect = "Increased movement speed", balance = { balanceequilibriumtake = "celerity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Celerity" },
  def_lifescent            = { defense = "lifescent", type = "normal", effect = "Detect nearby prey movements", balance = { balanceequilibriumtake = "lifescent" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lifescent" },
  def_concentrate          = { defense = "concentrate", type = "normal", effect = "Make your blood use more efficient", balance = { balanceequilibriumtake = "blood concentrate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Concentration", tree = "Sanguis" },
  def_shadowblow           = { defense = "shadowblow", type = "normal", effect = "Your shadow strikes out at your attacker", balance = { balanceequilibriumtake = "blood shadow" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shadow" },
  def_blurred              = { defense = "blurred", type = "normal", effect = "Others cannot see your vitals", balance = { balanceequilibriumtake = "blood blur" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blur" },
  def_elusion              = { defense = "elusion", type = "normal", effect = "You avoid opponents' blows", balance = { balanceequilibriumtake = "elusion on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Elusion" },
  def_deathlink            = { defense = "deathlink", type = "normal", effect = "You are linked to your coffin", balance = { balanceequilibriumtake = "deathlink" }, state = "down", needit = false, timer = createStopWatch(), skill = "Deathlink" },
  def_bloodrage            = { defense = "bloodrage", type = "normal", effect = "Transcend mortal limitations", balance = { balanceequilibriumtake = "blood enrage" }, state = "down", needit = false, timer = createStopWatch(), skill = "Enrage" },
  def_deluge               = { defense = "deluge", type = "normal", effect = "Allows the user to fall below zero health, effectively making them immune to damage.", balance = { balanceequilibriumtake = "blood deluge" }, state = "down", needit = false, timer = createStopWatch(), skill = "Deluge" },
  def_arrow_catching       = { defense = "arrow_catching", type = "normal", effect = "You have a chance to catch arrows", balance = { balanceequilibriumtake = "catching" }, state = "down", needit = false, timer = createStopWatch(), skill = "Catching" },
  def_trepidation          = { defense = "trepidation", type = "normal", effect = "Anxieties 4 enemies", balance = { balanceequilibriumtake = "blood trepidation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Trepidation" },

  --Ravager
  def_vinculum             = { defense = "vinculum", type = "normal", effect = "Enabled your use of abilities", balance = { balanceequilibriumtake = "invoke vinculum" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vinculum" },
  def_ruthlessness         = { defense = "ruthlessness", type = "normal", effect = "Resist cutting and blunt dmg", balance = { balanceequilibriumtake = "invoke ruthlessness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ruthlessness" },
  def_contempt             = { defense = "contempt", type = "normal", effect = "Negates paresis only once", balance = { needybalancetake = "contempt" }, state = "down", needit = false, timer = createStopWatch(), skill = "Contempt" },
  def_impenetrable         = { defense = "impenetrable", type = "normal", effect = "Deflect arrows by chance, return them on success", balance = { balanceequilibriumtake = "invoke impenetrable" }, state = "down", needit = false, timer = createStopWatch(), skill = "Impenetrable" },
  def_criticality          = { defense = "criticality", type = "normal", effect = "Store up dmgs until threshold, then it heal some of your wounds", balance = { balanceequilibriumtake = "invoke criticality" }, state = "down", needit = false, timer = createStopWatch(), skill = "Criticality" },
  def_unfinished           = { defense = "unfinished", type = "normal", effect = "Revive you once you died", balance = { balanceequilibriumtake = "invoke unfinished" }, state = "down", needit = false, timer = createStopWatch(), skill = "Unfinished" },
  def_velocity             = { defense = "velocity", type = "normal", effect = " +2 to movement", balance = { special = "velocity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Velocity" },
  def_reflexes             = { defense = "reflexes", type = "normal", effect = "Suffer no malus to dodge chance when use channeling action", balance = { needybalance = "reflexes" }, state = "down", needit = false, timer = createStopWatch(), skill = "Reflexes" },
  def_exhilarate           = { defense = "exhilarate", type = "normal", effect = "give chance to reduce eq and bal timer", balance = { balanceequilibriumtake = "exhilarate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Exhilarate" },
  def_inflated             = { defense = "inflated", type = "normal", effect = "raises your intelligence", balance = { balanceequilibrium = "ego inflate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Inflate" },
  def_untouchable          = { defense = "untouchable", type = "normal", effect = "magical damage reduction or something", balance = { balanceequilibrium = "ego untouchable" }, state = "down", needit = false, timer = createStopWatch(), skill = "Untouchable" },
  def_predation            = { defense = "predation", type = "normal", effect = "see what other would parries in very short time", balance = { needybalancetake = "predation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Predation" },
  def_delirium             = { defense = "delirium", type = "normal", effect = "cure a random AFF, use certain attacks off bal", balance = { balanceequilibriumtake = "invoke delirium" }, state = "down", needit = false, timer = createStopWatch(), skill = "Delirium" },
  def_ravage               = { defense = "ravage", type = "normal", effect = "makes your fists attack cause ablaze", balance = { balanceequilibriumtake = "invoke ravage" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ravage" },

  --Revenant
  def_iyedlo               = { defense = "iyedlo", type = "normal", effect = "Hit faster", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Iyedlo" },

  def_influence_phantasm   = { defense = "influence_phantasm", type = "normal", effect = "Increase chance of hitting", balance = { balanceequilibriumtake = "phantasm influence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Influence" },
  def_congeal_phantasm     = { defense = "congeal_phantasm", type = "normal", effect = "15% cutting/blunt/magic resist", balance = { balanceequilibriumtake = "phantasm congeal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Congeal" },
  def_leech_phantasm       = { defense = "leech_phantasm", type = "normal", effect = "Increased constitution, regenerate health", balance = { balanceequilibriumtake = "phantasm leech" }, state = "down", needit = false, timer = createStopWatch(), skill = "Leech" },
  def_claw_phantasm        = { defense = "claw_phantasm", type = "normal", effect = "Increased strength, damage enemies", balance = { balanceequilibriumtake = "phantasm claw" }, state = "down", needit = false, timer = createStopWatch(), skill = "Claw" },
  def_mire_phantasm        = { defense = "mire_phantasm", type = "normal", effect = "Decrease non-natural healing", balance = { balanceequilibriumtake = "phantasm mire" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mire" },
  def_choke_phantasm       = { defense = "choke_phantasm", type = "normal", effect = "Randomly afflict enemies", balance = { balanceequilibriumtake = "phantasm choke" }, state = "down", needit = false, timer = createStopWatch(), skill = "Choke" },
  def_wail_phantasm        = { defense = "wail_phantasm", type = "normal", effect = "Increase mana costs", balance = { balanceequilibriumtake = "phantasm wail" }, state = "down", needit = false, timer = createStopWatch(), skill = "Wail" },
  def_absorb_phantasm      = { defense = "absorb_phantasm", type = "normal", effect = "Randomly cure afflictions", balance = { balanceequilibriumtake = "phantasm absorb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Absorb" },
  def_siphon_phantasm      = { defense = "siphon_phantasm", type = "normal", effect = "Increased intelligence, regenerate mana", balance = { balanceequilibriumtake = "phantasm siphon" }, state = "down", needit = false, timer = createStopWatch(), skill = "Siphon" },
  def_symbiosis_phantasm   = { defense = "symbiosis_phantasm", type = "normal", effect = "Heal when killing things", balance = { balanceequilibriumtake = "phantasm symbiosis" }, state = "down", needit = false, timer = createStopWatch(), skill = "Symbiosis" },

  def_influence_chimera    = { defense = "influence_chimera", type = "normal", effect = "Increased chance to hit", balance = { balanceequilibriumtake = "phantasm devour influence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chimerization" },
  def_congeal_chimera      = { defense = "congeal_chimera", type = "normal", effect = "5% cutting/blunt/magic resist", balance = { balanceequilibriumtake = "phantasm devour congeal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chimerization" },
  def_leech_chimera        = { defense = "leech_chimera", type = "normal", effect = "Regenerate health", balance = { balanceequilibriumtake = "phantasm devour leech" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chimerization" },
  def_claw_chimera         = { defense = "claw_chimera", type = "normal", effect = "Damage enemies", balance = { balanceequilibriumtake = "phantasm devour claw" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chimerization" },
  def_mire_chimera         = { defense = "mire_chimera", type = "normal", effect = "Decrease non-natural healing", balance = { balanceequilibriumtake = "phantasm devour mire" }, state = "down", needit = false, timer = createStopWatch(), skill = "Chimerization" },
  def_choke_chimera        = { defense = "choke_chimera", type = "normal", effect = "Randomly afflict enemies", balance = { balanceequilibriumtake = "phantasm devour choke" }, state = "down", needit = false, timer = createStopWatch(), skill = "Choke" },
  def_wail_chimera         = { defense = "wail_chimera", type = "normal", effect = "Increase mana costs", balance = { balanceequilibriumtake = "phantasm devour wail" }, state = "down", needit = false, timer = createStopWatch(), skill = "Wail" },
  def_absorb_chimera       = { defense = "absorb_chimera", type = "normal", effect = "Randomly cure afflictions", balance = { balanceequilibriumtake = "phantasm devour absorb" }, state = "down", needit = false, timer = createStopWatch(), skill = "Absorb" },
  def_siphon_chimera       = { defense = "siphon_chimera", type = "normal", effect = "Regenerate mana", balance = { balanceequilibriumtake = "phantasm devour siphon" }, state = "down", needit = false, timer = createStopWatch(), skill = "Siphon" },
  def_symbiosis_chimera    = { defense = "symbiosis_chimera", type = "normal", effect = "Heal when killing things", balance = { balanceequilibriumtake = "phantasm devour symbiosis" }, state = "down", needit = false, timer = createStopWatch(), skill = "Symbiosis" },


  --Runecarver
  def_prowess            = { defense = "prowess", type = "normal", effect = "WP drain but better crit chance", balance = { balanceequilibriumtake = "runecarve prowess on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Prowess" },
  def_hex_stalk          = { defense = "hex_stalk", type = "normal", effect = "Mask your movements", balance = { balanceequilibriumtake = "hex stalk " }, state = "down", needit = false, timer = createStopWatch(), skill = "Stalk" },
  def_hex_preservation   = { defense = "hex_preservation", type = "normal", effect = "Reduce damage taken from elements", balance = { balanceequilibriumtake = "hex preserve" }, state = "down", needit = false, timer = createStopWatch(), skill = "Preserve" },
  def_ironbark           = { defense = "ironbark", type = "normal", effect = "Better diverting", balance = { balanceequilibriumtake = "runecarve ironbark" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ironbark" },
  def_rot_carpet         = { defense = "rot_carpet", type = "normal", effect = "Levitation and Waterwalk", balance = { balanceequilibriumtake = "spore carpet" }, state = "down", needit = false, timer = createStopWatch(), skill = "Carpet" },

  --Sciomancer
  def_rigor              = { defense = "rigor", type = "normal", effect = "WP drain but better crit chance", balance = { balanceequilibriumtake = "cast rigor on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Rigor" },
  def_shadow_engulf      = { defense = "shadow_engulf", type = "normal", effect = "Mask your movements", balance = { balanceequilibriumtake = "cast engulf on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Engulf" },
  def_shadow_mantle      = { defense = "shadow_mantle", type = "normal", effect = "Reduce damage taken from elements", balance = { balanceequilibriumtake = "cast mantle" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mantle" },
  def_blurring           = { defense = "blurring", type = "normal", effect = "Better diverting", balance = { balanceequilibriumtake = "cast blurring" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blurring" },
  def_featherstep        = { defense = "featherstep", type = "normal", effect = "Levitation and Waterwalk", balance = { balanceequilibriumtake = "gravity featherstep" }, state = "down", needit = false, timer = createStopWatch(), skill = "Featherstep" },

  --Sentinel
  def_barkskin           = { defense = "barkskin", type = "normal", effect = "10% Resist to Cutting/Blunt", balance = { needyequilibriumtake = "barkskin" }, state = "down", needit = false, timer = createStopWatch(), skill = "Barkskin" },
  def_lifesap            = { defense = "lifesap", type = "normal", effect = "Gain health on melee attack", balance = { needyequilibriumtake = "lifesap" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lifesap" },
  def_hardiness          = { defense = "hardiness", type = "normal", effect = "15% Resist to Cold/Venom", balance = { needyequilibriumtake = "hardiness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Hardiness" },
  def_flexibility        = { defense = "flexibility", type = "normal", effect = "Increased writhe", balance = { balanceequilibriumtake = "flexibility" }, state = "down", needit = false, timer = createStopWatch(), skill = "Flexibility" },
  def_masked_scent       = { defense = "masked_scent", type = "normal", effect = "Not listed on scent", balance = { balanceequilibriumtake = "mask scent" }, state = "down", needit = false, timer = createStopWatch(), skill = "Masking" },
  def_concealed          = { defense = "concealed", type = "normal", effect = "You are a shadowy figure", balance = { balanceequilibriumtake = "conceal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Conceal" },
  def_foreststride       = { defense = "foreststride", type = "normal", effect = "You move faster outdoors & in forests", balance = { balanceequilibriumtake = "foreststride" }, state = "down", needit = false, timer = createStopWatch(), skill = "Foreststriding" },
  def_alacrity           = { defense = "alacrity", type = "normal", effect = "You shoot and trap faster", balance = { balanceequilibriumtake = "alacrity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Alacrity" },

  --Shaman
  def_spiritbond         = { defense = "spiritbond", type = "normal", effect = "Share damage with your spirit.", balance = { balanceequilibriumtake = "familiar spiritbond on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spiritbond" },
  def_protection         = { defense = "protection", type = "normal", effect = "Resistance to cutting/blunt.", balance = { balanceequilibriumtake = "shaman protection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Protection" },
  def_shaman_spiritsight = { defense = "shaman_spiritsight", type = "normal", effect = "You get loki 2.0.", balance = { balanceequilibriumtake = "shaman spiritsight on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spiritsight" },
  def_lifebloom          = { defense = "lifebloom", type = "normal", effect = "Restore HP upon getting low health.", balance = { balanceequilibriumtake = "commune lifebloom" }, requiredBalance = "lifebloom", state = "down", needit = false, timer = createStopWatch(), skill = "Lifebloom" },
  def_shaman_warding     = { defense = "shaman_warding", type = "normal", effect = "Give mental affs when your parry is hit.", balance = { balanceequilibriumtake = "shaman warding" }, state = "down", needit = false, timer = createStopWatch(), skill = "Warding" },
  def_greenfoot          = { defense = "greenfoot", type = "normal", effect = "Bring your nature with you", balance = { balanceequilibriumtake = "nature greenfoot on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Greenfoot" },
  def_oath_durdalis      = { defense = "oath_durdalis", type = "normal", effect = "Absorb an elemental attack every 60 sec", balance = { balanceequilibriumtake = "oath durdalis activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_forestwalker  = { defense = "oath_forestwalker", type = "normal", effect = "Recover health while in overgrowth/forest", balance = { balanceequilibriumtake = "oath forestwalker activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_blade         = { defense = "oath_blade", type = "normal", effect = "25% chance you won't consume 1 primal energy charge", balance = { balanceequilibriumtake = "oath blade activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_tranquility   = { defense = "oath_tranquility", type = "normal", effect = "Periodically cure an affliction as long as not paralyzed", balance = { balanceequilibriumtake = "oath tranquility activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_shaman        = { defense = "oath_shaman", type = "normal", effect = "2% chance to resist mental affliction", balance = { balanceequilibriumtake = "oath shaman activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_primeval      = { defense = "oath_primeval", type = "normal", effect = "Your familiars attack faster!", balance = { balanceequilibriumtake = "oath primeval activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },
  def_oath_rhythm        = { defense = "oath_rhythm", type = "normal", effect = "prevents force abilities and effects", balance = { balanceequilibriumtake = "oath rhythm activate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Oaths" },


  --Shapeshifter
  def_weathering = { defense = "weathering", type = "normal", effect = "Cold resistance", balance = { special = "weathering" }, state = "down", needit = false, timer = createStopWatch(), skill = "Weathering" },
  def_bodyheat = { defense = "bodyheat", type = "normal", effect = "Protects against chill", balance = { needyequilibriumtake = "bodyheat" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bodyheat" },
  def_metabolism = { defense = "metabolism", type = "normal", effect = "Increase strength", balance = { balancetake = "metabolize on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Metabolize" },
  def_thickhide = { defense = "thickhide", type = "normal", effect = "Physical protection", balance = { balancetake = "thickhide" }, state = "down", needit = false, timer = createStopWatch(), skill = "Thickhide" },
  def_cornering = { defense = "cornering", type = "normal", effect = "Increase dodge chance", balance = { needybalancetake = "corner on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cornering" },
  def_salivating = { defense = "salivating", type = "normal", effect = "Bites give haemophilia", balance = { equilibriumneed = "salivate" }, state = "down", needit = false, timer = createStopWatch(), skill = "Salivate" },
  def_hardening = { defense = "hardening", type = "normal", effect = "Chance to prevent crippled limbs", balance = { needyequilibriumtake = "harden bones" }, state = "down", needit = false, timer = createStopWatch(), skill = "Hardening" },
  def_fury = { defense = "fury", type = "normal", effect = "Can use claws off balance", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Fury" },
  def_bracing = { defense = "bracing", type = "normal", effect = "Bracing for physical attacks", balance = { needybalancetake = "brace" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bracing" },
  def_stealth = { defense = "stealth", type = "normal", effect = "Hide yourself", balance = { needybalancetake = "stealth on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stealth" },
  def_boneshaking = { defense = "boneshaking", type = "normal", effect = "howls ignore courage", balance = { balanceequilibriumtake = "boneshaking" }, state = "down", needit = false, timer = createStopWatch(), skill = "Boneshaking" },
  --Siderealist
  def_luminesce = { defense = "luminesce", type = "normal", effect = "basic astranomia spells", balance = { balanceequilibriumtake = "astra luminesce" }, state = "down", needit = false, timer = createStopWatch(), skill = "Luminesce" },
  def_blueshift = { defense = "blueshift", type = "normal", effect = "extra hp/mp", balance = { balanceequilibriumtake = "astra blueshift" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blueshift" },
  def_foresight = { defense = "foresight", type = "normal", effect = "dodge next physical", balance = { balanceequilibriumtake = "astra foresight" }, state = "down", needit = false, timer = createStopWatch(), skill = "Foresight" },
  def_centrum = { defense = "centrum", type = "normal", effect = "cast one-handed for short duration", balance = { balanceequilibriumtake = "astra centrum" }, state = "down", needit = false, timer = createStopWatch(), skill = "Centrum" },
  def_stargleam = { defense = "stargleam", type = "normal", effect = "generates charges from mana, used to give affs", balance = { balanceequilibriumtake = "astra gleam on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Gleam" },
  def_parallax = { defense = "parallax", type = "normal", effect = "stalled spell", balance = { balanceequilibriumtake = "astra parallax" }, state = "down", needit = false, timer = createStopWatch(), skill = "Parallax" },
  def_refraction = { defense = "refraction", type = "normal", effect = "vibes affect target regardless of enemy", balance = { balanceequilibriumtake = "refract target" }, state = "down", needit = false, timer = createStopWatch(), skill = "Refraction" },


  --Syssin
  def_hiding = { defense = "hiding", type = "blue", effect = "Conceals your presence", balance = { needybalancetake = "hide" }, state = "down", needit = false, timer = createStopWatch(), skill = "Hide" },
  def_warding = { defense = "warding", type = "normal", effect = "Physical resistance", balance = { needybalancetake = "warding" }, state = "down", needit = false, timer = createStopWatch(), skill = "Warding" },
  def_finesse = { defense = "finesse", type = "normal", effect = "Protects against rebounding", balance = { needybalancetake = "finesse" }, state = "down", needit = false, timer = createStopWatch(), skill = "Finesse" },
  def_weaving = { defense = "weaving", type = "red", effect = "Increases dodge rate", balance = { needybalancetake = "weaving on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Weaving" },
  def_shadowsight = { defense = "shadowsight", type = "normal", effect = "See hidden people", balance = { equilibriumtake = "shadowsight" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shadowsight" },
  def_ghosted = { defense = "ghosted", type = "normal", effect = "Conceals movement", balance = { needyequilibriumtake = "conjure ghost" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ghost" },
  def_phased = { defense = "phased", type = "yellow", effect = "On another plane", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Phase" },
  def_lipreading = { defense = "lipreading", type = "normal", effect = "Hear through DEAF", balance = { needybalancetake = "lipread" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lipread" },

  --Templar
  def_maingauche = { defense = "maingauche", type = "normal", effect = "Chance to counter attack", balance = { needyequilibriumtake = "maingauche" }, state = "down", needit = false, timer = createStopWatch(), skill = "MainGauche" },
  def_waterflow = { defense = "waterflow", type = "normal", effect = "Hit faster", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Waterflow" },

  def_accuracy_aura = { defense = "accuracy_aura", type = "normal", effect = "Increase chance of hitting", balance = { balanceequilibriumtake = "aura accuracy" }, state = "down", needit = false, timer = createStopWatch(), skill = "Accuracy" },
  def_protection_aura = { defense = "protection_aura", type = "normal", effect = "15% cutting/blunt/magic resist", balance = { balanceequilibriumtake = "aura protection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Protection" },
  def_healing_aura = { defense = "healing_aura", type = "normal", effect = "Increased constitution, regenerate health", balance = { balanceequilibriumtake = "aura healing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Healing" },
  def_purity_aura = { defense = "purity_aura", type = "normal", effect = "Increased strength, damage enemies", balance = { balanceequilibriumtake = "aura purity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Purity" },
  def_justice_aura = { defense = "justice_aura", type = "normal", effect = "Decrease non-natural healing", balance = { balanceequilibriumtake = "aura justice" }, state = "down", needit = false, timer = createStopWatch(), skill = "Justice" },
  def_pestilence_aura = { defense = "pestilence_aura", type = "normal", effect = "Randomly afflict enemies", balance = { balanceequilibriumtake = "aura pestilence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Pestilence" },
  def_spellbane_aura = { defense = "spellbane_aura", type = "normal", effect = "Increase mana costs", balance = { balanceequilibriumtake = "aura spellbane" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spellbane" },
  def_cleansing_aura = { defense = "cleansing_aura", type = "normal", effect = "Randomly cure afflictions", balance = { balanceequilibriumtake = "aura cleansing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cleansing" },
  def_meditation_aura = { defense = "meditation_aura", type = "normal", effect = "Increased intelligence, regenerate mana", balance = { balanceequilibriumtake = "aura meditation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Meditation" },
  def_redemption_aura = { defense = "redemption_aura", type = "normal", effect = "Heal when killing things", balance = { balanceequilibriumtake = "aura redemption" }, state = "down", needit = false, timer = createStopWatch(), skill = "Redemption" },

  def_accuracy_blessing = { defense = "accuracy_blessing", type = "normal", effect = "Increased chance to hit", balance = { balanceequilibriumtake = "aura blessing accuracy" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blessing" },
  def_protection_blessing = { defense = "protection_blessing", type = "normal", effect = "5% cutting/blunt/magic resist", balance = { balanceequilibriumtake = "aura blessing protection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blessing" },
  def_healing_blessing = { defense = "healing_blessing", type = "normal", effect = "Regenerate health", balance = { balanceequilibriumtake = "aura blessing healing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blessing" },
  def_purity_blessing = { defense = "purity_blessing", type = "normal", effect = "Damage enemies", balance = { balanceequilibriumtake = "aura blessing purity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blessing" },
  def_justice_blessing = { defense = "justice_blessing", type = "normal", effect = "Decrease non-natural healing", balance = { balanceequilibriumtake = "aura blessing justice" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blessing" },
  def_pestilence_blessing = { defense = "pestilence_blessing", type = "normal", effect = "Randomly afflict enemies", balance = { balanceequilibriumtake = "aura blessing pestilence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Pestilence" },
  def_spellbane_blessing = { defense = "spellbane_blessing", type = "normal", effect = "Increase mana costs", balance = { balanceequilibriumtake = "aura blessing spellbane" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spellbane" },
  def_cleansing_blessing = { defense = "cleansing_blessing", type = "normal", effect = "Randomly cure afflictions", balance = { balanceequilibriumtake = "aura blessing cleansing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cleansing" },
  def_meditation_blessing = { defense = "meditation_blessing", type = "normal", effect = "Regenerate mana", balance = { balanceequilibriumtake = "aura blessing meditation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Meditation" },
  def_redemption_blessing = { defense = "redemption_blessing", type = "normal", effect = "Heal when killing things", balance = { balanceequilibriumtake = "aura blessing redemption" }, state = "down", needit = false, timer = createStopWatch(), skill = "Redemption" },


  --Teradrim
  def_earthenform     = { defense = "earthenform", type = "normal", effect = "Embrace your earthen features", balance = { balanceequilibriumtake = "earthenform embrace" }, state = "down", needit = false, timer = createStopWatch(), skill = "Earthenform" },
  def_surefooted      = { defense = "surefooted", type = "normal", effect = "Increased Celery", balance = { balanceequilibriumtake = "earth surefooted" }, state = "down", needit = false, timer = createStopWatch(), skill = "Surefooted" },
  def_entwine         = { defense = "entwine", type = "normal", effect = "Disarm when someone goes for your parried limb", balance = { balanceequilibrium = "earth entwine" }, state = "down", needit = false, timer = createStopWatch(), skill = "Entwine" },
  def_ricochet        = { defense = "ricochet", type = "normal", effect = "Bounce attacks back to cripple limbs at times", balance = { balanceequilibriumtake = "earth ricochet" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ricochet" },
  def_twinsoul        = { defense = "twinsoul", type = "normal", effect = "Link your soul to your golem", balance = { balanceequilibriumtake = "golem twinsoul on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Twinsoul" },
  def_earth_resonance = { defense = "earth_resonance", type = "normal", effect = "Boosted health/mana regen", balance = { balanceequilibriumtake = "earth resonance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resonance" },
  def_stonebind       = { defense = "stonebind", type = "normal", effect = "They can't take your weapon", balance = { balanceequilibriumtake = "earth stonebind" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stonebind" },
  def_imbue_erosion   = { defense = "imbue_erosion", type = "normal", effect = "Erosion is useful on your weapon if you're sand sweltering", balance = { balanceequilibriumtake = "earth imbue erosion" }, state = "down", needit = false, timer = createStopWatch(), skill = "Erosion" },
  def_imbue_stonefury = { defense = "imbue_stonefury", type = "normal", effect = "Stonefury is useful on your weapon for bashing", balance = { balanceequilibriumtake = "earth imbue stonefury" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stonefury" },
  def_sand_swelter    = { defense = "sand_swelter", type = "normal", effect = "Your sands hit people in the room", balance = { balanceequilibriumtake = "sand swelter on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Swelter" },
  def_projection      = { defense = "projection", type = "normal", effect = "Remotely control sand abilities", balance = { balanceequilibriumtake = "sand projection on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Projection" },
  def_sand_conceal    = { defense = "sand_conceal", type = "normal", effect = "Become concealed by your sand", balance = { balanceequilibriumtake = "sand conceal on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Concealment" },
  def_disturbances    = { defense = "disturbances", type = "normal", effect = "Your sand informs you of who moves in and out", balance = { balanceequilibriumtake = "sand disturbances on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disturbances" },
  def_momentum        = { defense = "momentum", type = "normal", effect = "Strike faster", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Momentum" },
  def_footfeel        = { defense = "footfeel", type = "normal", effect = "Sense if someone enters into the ground", balance = { balanceequilibrium = "earth footfeel" }, state = "down", needit = false, timer = createStopWatch(), skill = "Footfeel" },

  --Tidesage
  def_permafrost      = { defense = "permafrost", type = "SeaGreen", effect = "Embrace the gales of the distant oceans", balance = { balanceequilibriumtake = "tide permafrost" }, state = "down", needit = false, timer = createStopWatch(), skill = "Permafrost" },
  def_sealegs         = { defense = "sealegs", type = "SeaGreen", effect = "Sea legs allow you to move faster", balance = { balanceequilibriumtake = "tide sealegs" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sealegs" },
  def_wavebreaking    = { defense = "wavebreaking", type = "SeaGreen", effect = "Disarm when someone goes for your parried limb", balance = { balanceequilibrium = "tide wavebreak" }, state = "down", needit = false, timer = createStopWatch(), skill = "Wavebreak" },
  def_tideflux        = { defense = "tideflux", type = "SeaGreen", effect = "Bounce attacks back to cripple limbs at times", balance = { balanceequilibriumtake = "tide flux" }, state = "down", needit = false, timer = createStopWatch(), skill = "Flux" },
  def_lifebond        = { defense = "lifebond", type = "SeaGreen", effect = "Link your soul to your elemental", balance = { balanceequilibriumtake = "synth lifebond on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Lifebond" },
  def_shore_leave     = { defense = "shore_leave", type = "SeaGreen", effect = "Boosted health/mana regen", balance = { balanceequilibriumtake = "tide shore" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shore" },
  def_encrusted       = { defense = "encrusted", type = "SeaGreen", effect = "They can't take your weapon", balance = { balanceequilibriumtake = "tide encrust" }, state = "down", needit = false, timer = createStopWatch(), skill = "Encrust" },
  def_expose_brume    = { defense = "expose_brume", type = "SeaGreen", effect = "Brume is useful if calling a sirensong", balance = { balanceequilibriumtake = "tide expose brume" }, state = "down", needit = false, timer = createStopWatch(), skill = "Brume" },
  def_expose_rime     = { defense = "expose_rime", type = "SeaGreen", effect = "Rime causes more damage for slower strikes", balance = { balanceequilibriumtake = "tide expose rime" }, state = "down", needit = false, timer = createStopWatch(), skill = "Rime" },
  def_sirensong       = { defense = "sirensong", type = "SeaGreen", effect = "Your fog effects people in the room", balance = { balanceequilibriumtake = "fog sirensong on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sirensong" },
  def_panoptic        = { defense = "panoptic", type = "SeaGreen", effect = "Remotely control fog abilities", balance = { balanceequilibriumtake = "fog panoptic on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Panoptic" },
  def_fog_obscure     = { defense = "fog_obscure", type = "SeaGreen", effect = "Become obscured in a thick fog", balance = { balanceequilibriumtake = "fog obscureon" }, state = "down", needit = false, timer = createStopWatch(), skill = "Obscure" },
  def_fluctuations    = { defense = "fluctuations", type = "SeaGreen", effect = "Your fog informs you of who moves in and out", balance = { balanceequilibriumtake = "fog fluctuations on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fluctuations" },
  def_hightide        = { defense = "hightide", type = "SeaGreen", effect = "Strike faster during high tide", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Hightide" },
  def_currents        = { defense = "currents", type = "normal", effect = "Sense if someone enters into the ground", balance = { balanceequilibrium = "tide currents" }, state = "down", needit = false, timer = createStopWatch(), skill = "Currents" },


  -- Warden
  def_battleflow = { defense = "battleflow", type = "normal", effect = "Can attack with 1 broken arm.", balance = { needybalancetake = "warden battleflow on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battleflow" },
  def_victory = { defense = "victory", type = "normal", effect = "Automatically harvest renown.", balance = { special = "ancest victory on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Victory" },
  def_invocation = { defense = "invocation", type = "normal", effect = "Boosts defenses and weapon damage.", balance = { special = "ancest invocation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Invocation" },
  def_ancest_blessing_safeguard = { defense = "ancest_blessing_safeguard", type = "normal", effect = "Boosts physical defense.", balance = { needyequilibriumtake = "ancest blessing safeguard" }, state = "down", needit = false, timer = createStopWatch(), skill = "Safeguard" },
  def_ancestral_bolster = { defense = "ancestral_bolster", type = "normal", effect = "Increased constitution.", balance = { needyequilibriumtake = "ancest bolster" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bolster" },
  def_intervention = { defense = "intervention", type = "normal", effect = "Protected from death.", balance = { needyequilibriumtake = "ancest intervention" }, state = "down", needit = false, timer = createStopWatch(), skill = "Intervention" },
  def_tacticianmark = { defense = "tacticianmark", type = "yellow", effect = "simuls go zoom", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_initiative = { defense = "initiative", type = "normal", effect = "Periodic heal on damage done.", balance = { needybalancetake = "warden initiative on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Initiative" },
  def_displacement = { defense = "displacement", type = "normal", effect = "Steals soul on hit.", balance = { equilibriumtake = "ancest displacement" }, state = "down", needit = false, timer = createStopWatch(), skill = "Displacement" },
  def_simulacrum_opening = { defense = "simulacrum_opening", type = "normal", effect = "Increases damage done to mobs.", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Openings" },
  def_severity = { defense = "severity", type = "normal", effect = "Attacks hit through parry.", balance = { needybalancetake = "warden severity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Severity" },
  def_roaring = { defense = "roaring", type = "normal", effect = "Make them prone/off bal.", balance = { needybalancetake = "warden roaring on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Roaring" },
  def_homage = { defense = "homage", type = "normal", effect = "Increased strength.", balance = { needyequilibriumtake = "warden homage" }, state = "down", needit = false, timer = createStopWatch(), skill = "Homage" },
  def_warding_rigor = { defense = "warding_rigor", type = "normal", effect = "Cheap Furor.", balance = { needybalancetake = "warden rigor" }, state = "down", needit = false, timer = createStopWatch(), skill = "Rigor" },
  def_anticipation = { defense = "anticipation", type = "normal", effect = "follow target on fleeing", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Anticipate" },

  --Wayfarer
  def_ironskin = { defense = "ironskin", type = "normal", effect = "Resist physical damage", balance = { balanceequilibriumtake = "wayfare ironskin" }, state = "down", needit = false, timer = createStopWatch(), skill = "Ironskin" },
  def_blindsense = { defense = "blindsense", type = "normal", effect = "Resistance to accuracy reduction", balance = { balanceequilibriumtake = "wayfare blindsense on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Blindsense" },
  def_greenheart = {
    defense = "greenheart",
    type = "normal",
    effect = "Tree Tattoo is sped up",
    balance = setmetatable({},
      {
        __index = function(
            t, k)
          if k == "balanceequilibriumtake" then return "outc greenink" .. snd.sep .. "wayfare greenheart on" end
          return rawget(t, k)
        end
      }),
    state = "down",
    needit = false,
    timer = createStopWatch(),
    skill = "Greenheart"
  },
  def_endure = { defense = "endure", type = "normal", effect = "Endurance usage reduced", balance = { balanceequilibriumtake = "wayfare endure on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Endure" },
  def_mountaineer = { defense = "mountaineer", type = "normal", effect = "You're shoutin' room-wide", balance = { balanceequilibriumtake = "wayfare mountaineer on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mountaineer" },
  def_dustcoat = { defense = "dustcoat", type = "normal", effect = "Soulmask while moving", balance = { balanceequilibriumtake = "wayfare dustcoat" }, state = "down", needit = false, timer = createStopWatch(), skill = "Dustcoat" },
  def_resilience = { defense = "resilience", type = "normal", effect = "Assess is wonky vs you", balance = { balanceequilibriumtake = "wayfare resilience on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resilience" },
  def_desolation = { defense = "desolation", type = "normal", effect = "You do more melee damage, ranged speed down", balance = { balanceequilibriumtake = "wayfare desolation on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Desolation" },
  def_circulation = { defense = "circulation", type = "normal", effect = "+1STR, clot under haemophilia, clot cost up", balance = { balanceequilibriumtake = "wayfare circulation on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Circulation" },
  def_brutality = { defense = "brutality", type = "normal", effect = "Fear people and maybe regen fury", balance = { balanceequilibriumtake = "fury brutality on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Brutality" },
  def_axe_avert = { defense = "axe_avert", type = "normal", effect = "Knock away projectiles", balance = { balanceequilibriumtake = "axe avert on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Avert" },
  def_axe_obstruct = { defense = "axe_obstruct", type = "normal", effect = "Smack those feared away", balance = { balanceequilibrium = "axe obstruct on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Obstruct" },
  def_axe_repel = { defense = "axe_repel", type = "normal", effect = "Stop them from cleaving you", balance = { balanceequilibriumtake = "axe repel on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Repel" },
  def_bloodtrails = { defense = "bloodtrails", type = "normal", effect = "Trace those bloody trails", balance = { balanceequilibriumtake = "wayfare bloodtrails on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bloodtrails" },
  def_phalanx = { defense = "phalanx", type = "normal", effect = "Give group cut/blunt defense bonus", balance = { balanceequilibriumtake = "fury battlechant phalanx" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battlechant" },
  def_anthem = { defense = "anthem", type = "normal", effect = "Give group extra damage", balance = { balanceequilibriumtake = "fury battlechant anthem" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battlechant" },
  def_rallied = { defense = "rallied", type = "normal", effect = "Reduce groups willpower and endurance costs", balance = { balanceequilibriumtake = "fury battlechant rally" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battlechant" },
  def_bolstered_morale = { defense = "bolstered_morale", type = "normal", effect = "Give group extra damage", balance = { balanceequilibriumtake = "fury battlechant bolster" }, state = "down", needit = false, timer = createStopWatch(), skill = "Battlechant" },
  def_battlechant = { defense = "battlechant", type = "normal", effect = "Maintaining a supporting shout", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Battlechant" },
  def_pierce = { defense = "pierce", type = "normal", effect = "Bypass next parry", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Distract" },
  def_dauntless = { defense = "dauntless", type = "normal", effect = "Passive fury gain", balance = { special = "fury dauntless on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Dauntless" },

  --Voidseer
  def_erudition = { defense = "erudition", type = "normal", effect = "Erudition defense for Voidseer", balance = { needyequilibriumtake = "pursue erudition" }, state = "down", needit = false, timer = createStopWatch(), skill = "Erudition" },
  def_synergism = { defense = "synergism", type = "normal", effect = "Yay link", balance = { balanceequilibriumtake = "chakra synergism 50" }, state = "down", needit = false, timer = createStopWatch(), skill = "Synergism" },
  def_introspection = { defense = "introspection", type = "normal", effect = "introspection", balance = { balanceequilibriumtake = "chakra introspection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Introspection" },
  def_withstand = { defense = "withstand", type = "normal", effect = "Reduced psychic damage", balance = { balanceequilibrium = "chakra withstand me" }, state = "down", needit = false, timer = createStopWatch(), skill = "Withstand" },
  def_vitalise = { defense = "vitalise", type = "normal", effect = "Cure random affs", balance = { balanceequilibriumtake = "void vitalise" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vitalise" },
  def_occultism = { defense = "occultism", type = "normal", effect = "catabolism", balance = { balanceequilibriumtake = "void occultism" }, state = "down", needit = false, timer = createStopWatch(), skill = "Occultism" },
  def_kismet = { defense = "kismet", type = "normal", effect = "Setup your nexus", balance = { balanceequilibriumtake = "void kismet one" }, state = "down", needit = false, timer = createStopWatch(), skill = "Kismet" },


  --Zealot
  def_firefist = { defense = "firefist", type = "normal", effect = "makes your fists attack cause ablaze", balance = { balanceequilibriumtake = "enact firefist" }, state = "down", needit = false, timer = createStopWatch(), skill = "Firefist" },
  def_focalmark = { defense = "focalmark", type = "normal", effect = "Enabled your use of purification abilities", balance = { balanceequilibriumtake = "enact focalmark" }, state = "down", needit = false, timer = createStopWatch(), skill = "Focalmark" },
  def_tempered_body = { defense = "tempered_body", type = "normal", effect = "Resist cutting and blunt dmg", balance = { balanceequilibriumtake = "enact tempering" }, state = "down", needit = false, timer = createStopWatch(), skill = "Tempering" },
  def_swagger = { defense = "swagger", type = "normal", effect = "Negates paresis only once", balance = { needybalancetake = "swagger" }, state = "down", needit = false, timer = createStopWatch(), skill = "Swagger" },
  def_deflection = { defense = "deflection", type = "normal", effect = "Deflect arrows by chance, return them on success", balance = { balanceequilibriumtake = "enact deflection" }, state = "down", needit = false, timer = createStopWatch(), skill = "Deflection" },
  def_discharge = { defense = "discharge", type = "normal", effect = "Store up dmgs until threshold, then it heal some of your wounds", balance = { balanceequilibriumtake = "enact discharge" }, state = "down", needit = false, timer = createStopWatch(), skill = "Discharge" },
  def_resurgence = { defense = "resurgence", type = "normal", effect = "Revive you once you died", balance = { balanceequilibriumtake = "enact resurgence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Resurgence" },
  def_haste = { defense = "haste", type = "normal", effect = " +2 to movement", balance = { special = "haste" }, state = "down", needit = false, timer = createStopWatch(), skill = "Haste" },
  def_litheness = { defense = "litheness", type = "normal", effect = "Suffer no malus to dodge chance when use channeling action", balance = { needybalance = "litheness" }, state = "down", needit = false, timer = createStopWatch(), skill = "Litheness" },
  def_disunion = { defense = "disunion", type = "normal", effect = "give chance to reduce eq and bal timer", balance = { balanceequilibriumtake = "disunion" }, state = "down", needit = false, timer = createStopWatch(), skill = "Disunion" },
  def_wrath = { defense = "wrath", type = "normal", effect = "see what other would parries in very short time", balance = { needybalancetake = "wrath" }, state = "down", needit = false, timer = createStopWatch(), skill = "Wrath" },
  def_zenith = { defense = "zenith", type = "normal", effect = "cure a random AFF, use certain attacks off bal", balance = { balanceequilibriumtake = "enact zenith" }, state = "down", needit = false, timer = createStopWatch(), skill = "Zenith" },
  def_mindspark = { defense = "mindspark", type = "normal", effect = "raises your intelligence", balance = { balanceequilibrium = "psi mindspark" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mindspark" },
  def_bending = { defense = "bending", type = "normal", effect = "magical damage reduction or something", balance = { balanceequilibrium = "psi bending" }, state = "down", needit = false, timer = createStopWatch(), skill = "Bending" },

  --predator
  def_spacing = { defense = "spacing", type = "normal", effect = "Physical audit", balance = { balanceequilibriumtake = "spacing" }, state = "down", needit = false, timer = createStopWatch(), skill = "Spacing" },
  def_masked = { defense = "masked", type = "normal", effect = "Veil-like effect", balance = { balanceequilibrium = "wear mask" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mask" },
  def_trueparry = { defense = "trueparry", type = "normal", effect = "Parry all limbs, channel", balance = { balanceequilibrium = "trueparry" }, state = "down", needit = false, timer = createStopWatch(), skill = "Trueparry" },
  def_bladesurge = { defense = "bladesurge", type = "normal", effect = "Burstheal like vitality, plus extra hit when activated", balance = { balanceequilibriumtake = "bladesurge" }, requiredBalance = "bladesurge", state = "down", needit = false, timer = createStopWatch(), skill = "Bladesurge" },
  def_bladesurge_energy = { defense = "bladesurge_energy", type = "goldenrod", effect = "All knifeplay stances", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Bladesurge" },
  def_absorption = { defense = "absorption", type = "normal", effect = "Burst damage after receiving enough magic based damage", balance = { balanceequilibriumtake = "absorption" }, state = "down", needit = false, timer = createStopWatch(), skill = "Tidalslash" },
  --def_regeneration = {defense = "regeneration", type = "normal", effect = "Regen health", balance = {balanceequilibrium = "regeneration on"}, state = "down", needit = false, timer = createStopWatch(), skill = "Regeneration"},
  --This shares monks' regeneration defense - it's handled in that part of the dictionary.
  def_secondwind = { defense = "secondwind", type = "normal", effect = "Faster wake from sleep", balance = { balanceequilibrium = "secondwind" }, state = "down", needit = false, timer = createStopWatch(), skill = "Secondwind" },
  def_windwalking = { defense = "windwalking", type = "normal", effect = "Avoid area alerts", balance = { balanceequilibriumtake = "windwalk" }, state = "down", needit = false, timer = createStopWatch(), skill = "Windwalk" },
  def_preserval = { defense = "preserval", type = "normal", effect = "Protect against fire/cold", balance = { balanceequilibriumtake = "preservation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Preserval" },
  def_whitesight = { defense = "whitesight", type = "normal", effect = "See through blizzards", balance = { balanceequilibrium = "whitesight" }, state = "down", needit = false, timer = createStopWatch(), skill = "Whitesight" },
  def_aversion = { defense = "aversion", type = "normal", effect = "Avoid aegis and runes, but blocks ql and gmcp map", balance = { balanceequilibrium = "avert eyes" }, state = "down", needit = false, timer = createStopWatch(), skill = "Aversion" },
  def_defang = { defense = "defang", type = "normal", effect = "Knocks offbal if successful parry", balance = { balanceequilibriumtake = "defang" }, state = "down", needit = false, timer = createStopWatch(), skill = "Defang" },
  def_culmination = { defense = "culmination", type = "normal", effect = "Improves dodge all", balance = { balanceequilibrium = "culmination" }, state = "down", needit = false, timer = createStopWatch(), skill = "Culmination" },
  def_closecombat = { defense = "closecombat", type = "normal", effect = "Improved accuracy", balance = { balanceequilibrium = "closecombat" }, state = "down", needit = false, timer = createStopWatch(), skill = "Closecombat" },

  --adherent
  def_adherent_form = { defense = "adherent_form", type = "normal", effect = "You are pissed", balance = { balanceequilibriumtake = "ascend soul brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_barrier = { defense = "adherent_barrier", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "adherent barrier" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_presence = { defense = "adherent_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "adherent presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_synchroneity = { defense = "adherent_synchroneity", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "adherent synchroneity on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_mortalfire = { defense = "adherent_mortalfire", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "adherent mortalfire" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_mortalfire_stored = { defense = "adherent_mortalfire_stored", type = "normal", effect = "Raises mortalfire when <40% health", balance = { balanceequilibriumtake = "adherent mortalfire store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_store = { defense = "adherent_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_avengement = { defense = "adherent_avengement", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent avengement on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_malevolence = { defense = "adherent_malevolence", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent malevolence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_turmoil = { defense = "adherent_turmoil", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent turmoil on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_ruination = { defense = "adherent_ruination", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent ruination on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_indomitable = { defense = "adherent_indomitable", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent indomitable on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_adherent_acid = { defense = "adherent_acid", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "adherent acid on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --glacian
  def_glacian_form = { defense = "glacian_form", type = "normal", effect = "Glacian go BRRRRR", balance = { balanceequilibriumtake = "transfigure physiology brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_penumbra = { defense = "glacian_penumbra", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "glacian penumbra" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_presence = { defense = "glacian_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "glacian presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_silhouette = { defense = "glacian_silhouette", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "glacian silhouette on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_adumbration = { defense = "glacian_adumbration", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "glacian adumbration" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_adumbration_stored = { defense = "glacian_adumbration_stored", type = "normal", effect = "Raises adumbration when <40% health", balance = { balanceequilibriumtake = "glacian adumbration store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_store = { defense = "glacian_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_glacian_twilight = { defense = "glacian_twilight", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "glacian twilight on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --tiarna
  def_tiarna_form = { defense = "tiarna_form", type = "normal", effect = "Rustle rustle", balance = { balanceequilibriumtake = "rhythm thrum brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_bulwark = { defense = "tiarna_bulwark", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "tiarna bulwark" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_presence = { defense = "tiarna_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "tiarna presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_chimerism = { defense = "tiarna_chimerism", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "tiarna chimerism on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_shelter = { defense = "tiarna_shelter", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "tiarna shelter" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_shelter_stored = { defense = "tiarna_shelter_stored", type = "normal", effect = "Raises shelter when <40% health", balance = { balanceequilibriumtake = "tiarna shelter store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_store = { defense = "tiarna_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_tiarna_ruin = { defense = "tiarna_ruin", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "tiarna ruin on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --Seraph
  def_seraph_form = { defense = "seraph_form", type = "gold", effect = "Be not afraid!", balance = { balanceequilibrium = "sunrise embrace brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_presence = { defense = "seraph_presence", type = "gold", effect = "Seraph Crit and Dodge", balance = { balanceequilibrium = "seraph presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_radiate = { defense = "seraph_radiate", type = "gold", effect = "Seraph periodic magic damage", balance = { balanceequilibrium = "seraph radiate on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_corona = { defense = "seraph_corona", type = "gold", effect = "Blocks the next attack", balance = { balanceequilibrium = "seraph corona" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_corona_stored = { defense = "seraph_corona_stored", type = "gold", effect = "A corona will protect you in your hour of need", balance = { balanceequilibrium = "seraph corona store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_parhelion = { defense = "seraph_parhelion", type = "gold", effect = "Seraph chance to duplicate attack", balance = { balanceequilibrium = "seraph parhelion on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_halo = { defense = "seraph_halo", type = "gold", effect = "Seraph absorb aff and defence", balance = { special = "seraph halo" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_seraph_store = { defense = "seraph_store", type = "gold", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --aetherial
  def_aetherial_form = { defense = "aetherial_form", type = "normal", effect = "You are a star", balance = { balanceequilibriumtake = "arise heavens brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_bastion = { defense = "aetherial_bastion", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "aetherial bastion" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_presence = { defense = "aetherial_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "aetherial presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_torment = { defense = "aetherial_torment", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "aetherial torment on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_agility = { defense = "aetherial_agility", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "aetherial agility on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_band = { defense = "aetherial_band", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "aetherial band" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_band_stored = { defense = "aetherial_band_stored", type = "normal", effect = "Will raise band if <40% health", balance = { balanceequilibriumtake = "aetherial band store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_aetherial_store = { defense = "aetherial_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --titan
  def_titan_form = { defense = "titan_form", type = "normal", effect = "100% pure beef", balance = { balanceequilibriumtake = "awaken core brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_irradiance = { defense = "titan_irradiance", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "titan irradiance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_presence = { defense = "titan_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "titan presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_disruption = { defense = "titan_disruption", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "titan disruption on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_multicore = { defense = "titan_multicore", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "titan multicore on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_remnant = { defense = "titan_remnant", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "titan remnant" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_remnant_stored = { defense = "titan_remnant_stored", type = "normal", effect = "Will raise remnant if <40% health", balance = { balanceequilibriumtake = "titan remnant store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_titan_store = { defense = "titan_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --astral
  def_astral_form = { defense = "astral_form", type = "normal", effect = "Taste the rainbow", balance = { balanceequilibriumtake = "masque self brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_refulgence = { defense = "astral_refulgence", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "astral refulgence" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_presence = { defense = "astral_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "astral presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_chaosspores = { defense = "astral_chaosspores", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "astral spores on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_recursion = { defense = "astral_recursion", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "astral recursion on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_dreamtide = { defense = "astral_dreamtide", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "astral dreamtide" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_dreamtide_stored = { defense = "astral_dreamtide_stored", type = "normal", effect = "Will raise dreamtide if <40% health", balance = { balanceequilibriumtake = "astral dreamtide store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_astral_store = { defense = "astral_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --nocturn
  def_nocturn_form = { defense = "nocturn_form", type = "normal", effect = "I vant to suck your blood!", balance = { balanceequilibriumtake = "shadow meld brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_bloodcoat = { defense = "nocturn_bloodcoat", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "nocturn_bloodcoat" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_presence = { defense = "nocturn_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "nocturn presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_haze = { defense = "nocturn_haze", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "nocturn haze on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_double = { defense = "nocturn_double", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "nocturn double on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_shadow = { defense = "nocturn_shadow", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "nocturn shadow" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_shadow_stored = { defense = "nocturn_shadow_stored", type = "normal", effect = "Will raise shadow if <40% health", balance = { balanceequilibriumtake = "nocturn shadow store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_nocturn_store = { defense = "nocturn_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --sagani
  def_sagani_form = { defense = "sagani_form", type = "normal", effect = "You're the Avatar!", balance = { balanceequilibriumtake = "sagani coalesce brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_wall = { defense = "sagani_wall", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "sagani wall" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_presence = { defense = "sagani_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "sagani presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_epicentre = { defense = "sagani_epicentre", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "sagani epicentre on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_similitude = { defense = "sagani_similitude", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "sagani similitude on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_helix = { defense = "sagani_helix", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "sagani helix" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_helix_stored = { defense = "sagani_helix_stored", type = "normal", effect = "Will raise helix if <40% health", balance = { balanceequilibriumtake = "sagani helix store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_sagani_store = { defense = "sagani_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --Chaos
  def_chaos_form = { defense = "chaos_form", type = "normal", effect = "LeT's GeT cHaOtIc!!!", balance = { balanceequilibriumtake = "embrace chaos brutal" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_shroud = { defense = "chaos_shroud", type = "normal", effect = "Protect you and absorb afflictions", balance = { balanceequilibriumtake = "chaos shroud" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_presence = { defense = "chaos_presence", type = "normal", effect = "Grants crit and dodge chance", balance = { balanceequilibriumtake = "chaos presence on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_entropy = { defense = "chaos_entropy", type = "normal", effect = "Aura that damages and sometimes affs enemies", balance = { balanceequilibriumtake = "chaos entropy on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_fork = { defense = "chaos_fork", type = "normal", effect = "Chance to replicate your abilities", balance = { balanceequilibriumtake = "chaos fork on" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_figment = { defense = "chaos_figment", type = "normal", effect = "Blocks the next attack", balance = { balanceequilibriumtake = "chaos figment" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_figment_stored = { defense = "chaos_figment_stored", type = "normal", effect = "Will raise figment if <40% health", balance = { balanceequilibriumtake = "chaos figment store" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
  def_chaos_store = { defense = "chaos_store", type = "normal", effect = "Return to your fancy room on death", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --lifesense relic
  def_lifesense = { defense = "lifesense", type = "normal", effect = "Report people reviving.", balance = { special = "lifesense" }, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },

  --making sure empowered moon is in here to avoid errors, regardless of class
  def_empowered_moon = { defense = "empowered_moon", type = "normal", effect = "extra mana recovery", balance = { balanceequilibriumtake = "cast sagacity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sagacity" },
  def_empowered_boar = { defense = "empowered_boar", type = "DarkOrange", effect = "extra health recovery", balance = { balanceequilibriumtake = "cast vivacity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vivacity" },

  def_barrier = { defense = "barrier", type = "normal", effect = "Prismatic barrier", balance = {}, state = "down", needit = false, timer = createStopWatch(), skill = "Generic" },
}

snd.alternative_class_defenses = {
  --Class catch
  Praenomen_hiding = { defense = "hiding", type = "normal", effect = "Hide deeper in the shadows", balance = { balanceequilibriumtake = "veil" }, state = "down", needit = false, timer = createStopWatch(), skill = "Veil" },
  Akkari_hiding = { defense = "hiding", type = "ivory", effect = "Conceal your fervor", balance = { balanceequilibriumtake = "dim" }, state = "down", needit = false, timer = createStopWatch(), skill = "Dim" },
  Shapeshifter_celerity = { defense = "celerity", type = "normal", effect = "Faster movement", balance = { needybalancetake = "endurance" }, state = "down", needit = false, timer = createStopWatch(), skill = "Endurance" },
  Vampire_celerity = { defense = "celerity", type = "normal", effect = "Faster movement", balance = { needybalancetake = "celerity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Celerity" },
  Praenomen_stalking = { defense = "stalking", type = "normal", effect = "Nighttime hiding in the shadows", balance = { balanceequilibriumtake = "stalk" }, state = "down", needit = false, timer = createStopWatch(), skill = "Stalking" },
  Akkari_stalking = { defense = "stalking", type = "ivory", effect = "Muffle your footsteps at night", balance = { balanceequilibriumtake = "muffle" }, state = "down", needit = false, timer = createStopWatch(), skill = "Muffle" },
  Luminary_constitution = { defense = "constitution", type = "normal", effect = "Protection against vomiting", balance = { needyequilibriumtake = "perform constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Constitution" },
  Earthcaller_constitution = { defense = "constitution", type = "normal", effect = "Protection against vomiting", balance = { needyequilibriumtake = "dirge constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Constitution" },
  Monk_constitution = { defense = "constitution", type = "normal", effect = "Protection from nausea", balance = { needyequilibriumtake = "constitution" }, state = "down", needit = false, timer = createStopWatch(), skill = "Constitution" },
  Indorani_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "shroud" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shroud" },
  Oneiromancer_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "shroud" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shroud" },
  Carnifex_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "soul shroud" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shroud" },
  Warden_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "ancest distort" }, state = "down", needit = false, timer = createStopWatch(), skill = "Shroud" },
  Infiltrator_shroud = { defense = "shroud", type = "normal", effect = "Shrouded.", balance = { needybalancetake = "conjure cloak" }, state = "down", needit = false, timer = createStopWatch(), skill = "Cloak" },
  Revenant_maingauche = { defense = "maingauche", type = "normal", effect = "Chance to counter attack", balance = { needyequilibriumtake = "maingauche" }, state = "down", needit = false, timer = createStopWatch(), skill = "MainGauche" },
  Templar_maingauche = { defense = "maingauche", type = "normal", effect = "Chance to counter attack", balance = { needyequilibriumtake = "maingauche" }, state = "down", needit = false, timer = createStopWatch(), skill = "MainGauche" },
  Warden_fearless = { defense = "fearless", type = "normal", effect = "Protects against fear affliction.", balance = { special = "warden fortitude" }, state = "down", needit = false, timer = createStopWatch(), skill = "Fortitude" },
  Ascendril_empowered_moon = { defense = "empowered_moon", type = "normal", effect = "extra mana recovery", balance = { balanceequilibriumtake = "cast sagacity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sagacity" },
  Bloodborn_empowered_moon = { defense = "empowered_moon", type = "normal", effect = "extra mana recovery", balance = { balanceequilibriumtake = "unleash acumen" }, state = "down", needit = false, timer = createStopWatch(), skill = "Acumen" },
  Sciomancer_empowered_moon = { defense = "empowered_moon", type = "normal", effect = "extra mana recovery", balance = { balanceequilibriumtake = "cast sagacity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Sagacity" },
  Runecarver_empowered_moon = { defense = "empowered_moon", type = "normal", effect = "extra mana recovery", balance = { balanceequilibriumtake = "runecarve mysticism" }, state = "down", needit = false, timer = createStopWatch(), skill = "Mysticism" },
  Skill_insomnia = { defense = "insomnia", type = "normal", effect = "Prevents sleep effects", balance = { special = "insomnia" }, state = "down", needit = false, timer = createStopWatch(), skill = "Insomnia" },
  Earthcaller_insulation = { defense = "insulation", type = "normal", effect = "Prevents frozen buildup", balance = { balanceequilibriumtake = "tectonic insulation" }, state = "down", needit = false, timer = createStopWatch(), skill = "Insulation" },
  Luminary_insulation = { defense = "insulation", type = "normal", effect = "Prevents frozen buildup", balance = { balanceequilibriumtake = "evoke warmth" }, state = "down", needit = false, timer = createStopWatch(), skill = "Warmth" },
  Ascendril_empowered_boar = { defense = "empowered_boar", type = "DarkOrange", effect = "extra health recovery", balance = { balanceequilibriumtake = "cast vivacity" }, state = "down", needit = false, timer = createStopWatch(), skill = "Vivacity" },
  Bloodborn_empowered_boar = { defense = "empowered_boar", type = "indian_red", effect = "extra health recovery", balance = { balanceequilibriumtake = "unleash acumen" }, state = "down", needit = false, timer = createStopWatch(), skill = "Acumen" },
}
